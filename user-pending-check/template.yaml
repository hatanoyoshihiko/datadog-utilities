AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: List Datadog Invite-Pending users per Org

Parameters:
  ProjectName:
    Type: String
  SecretName:
    Type: String
    Default: ddOrgSecret
  LambdaRoleName:
    Type: String

Globals:
  Function:
    Runtime: python3.13
    Timeout: 300
    MemorySize: 256
    Layers:
      - !Ref RequestsLayer

Resources:
  ListInvitePendingFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${ProjectName}"
      CodeUri: src/app
      Handler: lambda_function.lambda_handler
      Policies:
        - Statement:
            - Effect: Allow
              Action: secretsmanager:GetSecretValue
              Resource: "*"
      Environment:
        Variables:
          SECRET_NAME: ddOrgSecret
          DATADOG_SITE: datadoghq.com

  RequestsLayer:
    Type: AWS::Serverless::LayerVersion
    Metadata:
      BuildMethod: python3.13
      BuildArchitecture: x86_64
    Properties:
      LayerName: requests-py-lib
      Description: requests library for Datadog script
      ContentUri: layer
      CompatibleRuntimes:
        - python3.13

  DDInviteFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref LambdaRoleName
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
